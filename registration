#!/bin/bash

# Dati in ingresso alla function: 
# input1,mask1 indica timepoint REFERENCE
# input2, mask2 indica timepoint FOLLOW-UP

input1_T1=$1
input2_T1=$2
input1_FLAIR=$3
input2_FLAIR=$4
mask1=$5
mask2=$6
output=$7

cd $output

# Coregistrare l'immagini FLAIR all'immagini T1-weighted (REFERENCE)
antsRegistration -d 3 --float 0 -o [matrice_ref,FLAIR_to_T1_ref.nii.gz] -n Linear -u 0 -w [0.005,0.995] -r [$input1_T1,$input1_FLAIR,1] -t Rigid[0.1] -m MI[$input1_T1,$input1_FLAIR,1,32,Regular,0.25] -c [1000x500x250x100,1e-6,10] -f 8x4x2x1 -s 3x2x1x0vox -t Affine[0.1] -m MI[$input1_T1,$input1_FLAIR,1,32,Regular,0.25] -c [1000x500x250x100,1e-6,10] -f 8x4x2x1 -s 3x2x1x0vox 

# Brain Extraction FLAIR_to_T1_ref
fslmaths FLAIR_to_T1_ref.nii.gz -mas $mask1 FLAIR_to_T1_ref_extr.nii.gz

# Coregistrare l'immagini FLAIR all'immagini T1-weighted (FOLLOW-UP)
antsRegistration -d 3 --float 0 -o [matrice_fol,FLAIR_to_T1_fol.nii.gz] -n Linear -u 0 -w [0.005,0.995] -r [$input2_T1,$input2_FLAIR,1] -t Rigid[0.1] -m MI[$input2_T1,$input2_FLAIR,1,32,Regular,0.25] -c [1000x500x250x100,1e-6,10] -f 8x4x2x1 -s 3x2x1x0vox -t Affine[0.1] -m MI[$input2_T1,$input2_FLAIR,1,32,Regular,0.25] -c [1000x500x250x100,1e-6,10] -f 8x4x2x1 -s 3x2x1x0vox 

# Brain Extraction FLAIR_to_T1_fol
fslmaths FLAIR_to_T1_fol.nii.gz -mas $mask2 FLAIR_to_T1_fol_extr.nii.gz

# Portare le immagini T1-weighted nello spazio halfway 
sienapd $input1_T1 $input2_T1 -o $output -d -r1 $mask1 -r2 $mask2

# Applicare c3d_affine per convertire le immagini halfway da FSL a RAS (ANTs)
# Utilizzo A e B (reoriented) che sono rispettivamente le immagini T1 reference e T1 follow-up

c3d_affine_tool -ref A.nii.gz -src A.nii.gz A_halfwayto_B.mat -fsl2ras -oitk output_ANTs_format1.mat
c3d_affine_tool -ref A.nii.gz -src B.nii.gz B_halfwayto_A.mat -fsl2ras -oitk output_ANTs_format2.mat 

######## ANTs Registration Syn #########

fixed_T1=A_brain.nii.gz
moved_T1=B_brain.nii.gz
fixed_FLAIR=FLAIR_to_T1_ref_extr.nii.gz
moved_FLAIR=FLAIR_to_T1_fol_extr.nii.gz

antsRegistration -d 3 --float 0 -o [matrice_T1,image_reg_T1.nii.gz] -n Linear -w [0.005,0.995] -u 0 -r output_ANTs_format2.mat -q output_ANTs_format1.mat -t Syn[0.1,3,0] -m CC[$fixed_T1,$moved_T1,1,4] -m CC[$fixed_FLAIR,$moved_FLAIR,1,4] -c [100x70x50x20,1e-6,20] -f 8x4x2x1 -s 3x2x1x0vox

#### Jacobian Determinant Image ####

CreateJacobianDeterminantImage 3 matrice_T11Warp.nii.gz image_detJ.nii.gz

mkdir Jacobian_output

mv image_detJ.nii.gz $output/Jacobian_output/


